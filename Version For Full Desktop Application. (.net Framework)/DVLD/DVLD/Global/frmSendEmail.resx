<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wH37lz7MquJaAAAAABJRU5ErkJggg==
</value>
  </data>
</root>